package com.thegutuproject.pizzashop.db.model;

import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;

public class OrderEntryDbExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table order_entry
     *
     * @mbg.generated Mon Mar 12 12:31:13 EDT 2018
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table order_entry
     *
     * @mbg.generated Mon Mar 12 12:31:13 EDT 2018
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table order_entry
     *
     * @mbg.generated Mon Mar 12 12:31:13 EDT 2018
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table order_entry
     *
     * @mbg.generated Mon Mar 12 12:31:13 EDT 2018
     */
    public OrderEntryDbExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table order_entry
     *
     * @mbg.generated Mon Mar 12 12:31:13 EDT 2018
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table order_entry
     *
     * @mbg.generated Mon Mar 12 12:31:13 EDT 2018
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table order_entry
     *
     * @mbg.generated Mon Mar 12 12:31:13 EDT 2018
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table order_entry
     *
     * @mbg.generated Mon Mar 12 12:31:13 EDT 2018
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table order_entry
     *
     * @mbg.generated Mon Mar 12 12:31:13 EDT 2018
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table order_entry
     *
     * @mbg.generated Mon Mar 12 12:31:13 EDT 2018
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table order_entry
     *
     * @mbg.generated Mon Mar 12 12:31:13 EDT 2018
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table order_entry
     *
     * @mbg.generated Mon Mar 12 12:31:13 EDT 2018
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table order_entry
     *
     * @mbg.generated Mon Mar 12 12:31:13 EDT 2018
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table order_entry
     *
     * @mbg.generated Mon Mar 12 12:31:13 EDT 2018
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table order_entry
     *
     * @mbg.generated Mon Mar 12 12:31:13 EDT 2018
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andOrderEntryIdIsNull() {
            addCriterion("ORDER_ENTRY_ID is null");
            return (Criteria) this;
        }

        public Criteria andOrderEntryIdIsNotNull() {
            addCriterion("ORDER_ENTRY_ID is not null");
            return (Criteria) this;
        }

        public Criteria andOrderEntryIdEqualTo(Integer value) {
            addCriterion("ORDER_ENTRY_ID =", value, "orderEntryId");
            return (Criteria) this;
        }

        public Criteria andOrderEntryIdNotEqualTo(Integer value) {
            addCriterion("ORDER_ENTRY_ID <>", value, "orderEntryId");
            return (Criteria) this;
        }

        public Criteria andOrderEntryIdGreaterThan(Integer value) {
            addCriterion("ORDER_ENTRY_ID >", value, "orderEntryId");
            return (Criteria) this;
        }

        public Criteria andOrderEntryIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("ORDER_ENTRY_ID >=", value, "orderEntryId");
            return (Criteria) this;
        }

        public Criteria andOrderEntryIdLessThan(Integer value) {
            addCriterion("ORDER_ENTRY_ID <", value, "orderEntryId");
            return (Criteria) this;
        }

        public Criteria andOrderEntryIdLessThanOrEqualTo(Integer value) {
            addCriterion("ORDER_ENTRY_ID <=", value, "orderEntryId");
            return (Criteria) this;
        }

        public Criteria andOrderEntryIdIn(List<Integer> values) {
            addCriterion("ORDER_ENTRY_ID in", values, "orderEntryId");
            return (Criteria) this;
        }

        public Criteria andOrderEntryIdNotIn(List<Integer> values) {
            addCriterion("ORDER_ENTRY_ID not in", values, "orderEntryId");
            return (Criteria) this;
        }

        public Criteria andOrderEntryIdBetween(Integer value1, Integer value2) {
            addCriterion("ORDER_ENTRY_ID between", value1, value2, "orderEntryId");
            return (Criteria) this;
        }

        public Criteria andOrderEntryIdNotBetween(Integer value1, Integer value2) {
            addCriterion("ORDER_ENTRY_ID not between", value1, value2, "orderEntryId");
            return (Criteria) this;
        }

        public Criteria andFoodItemIsNull() {
            addCriterion("FOOD_ITEM is null");
            return (Criteria) this;
        }

        public Criteria andFoodItemIsNotNull() {
            addCriterion("FOOD_ITEM is not null");
            return (Criteria) this;
        }

        public Criteria andFoodItemEqualTo(String value) {
            addCriterion("FOOD_ITEM =", value, "foodItem");
            return (Criteria) this;
        }

        public Criteria andFoodItemNotEqualTo(String value) {
            addCriterion("FOOD_ITEM <>", value, "foodItem");
            return (Criteria) this;
        }

        public Criteria andFoodItemGreaterThan(String value) {
            addCriterion("FOOD_ITEM >", value, "foodItem");
            return (Criteria) this;
        }

        public Criteria andFoodItemGreaterThanOrEqualTo(String value) {
            addCriterion("FOOD_ITEM >=", value, "foodItem");
            return (Criteria) this;
        }

        public Criteria andFoodItemLessThan(String value) {
            addCriterion("FOOD_ITEM <", value, "foodItem");
            return (Criteria) this;
        }

        public Criteria andFoodItemLessThanOrEqualTo(String value) {
            addCriterion("FOOD_ITEM <=", value, "foodItem");
            return (Criteria) this;
        }

        public Criteria andFoodItemLike(String value) {
            addCriterion("FOOD_ITEM like", value, "foodItem");
            return (Criteria) this;
        }

        public Criteria andFoodItemNotLike(String value) {
            addCriterion("FOOD_ITEM not like", value, "foodItem");
            return (Criteria) this;
        }

        public Criteria andFoodItemIn(List<String> values) {
            addCriterion("FOOD_ITEM in", values, "foodItem");
            return (Criteria) this;
        }

        public Criteria andFoodItemNotIn(List<String> values) {
            addCriterion("FOOD_ITEM not in", values, "foodItem");
            return (Criteria) this;
        }

        public Criteria andFoodItemBetween(String value1, String value2) {
            addCriterion("FOOD_ITEM between", value1, value2, "foodItem");
            return (Criteria) this;
        }

        public Criteria andFoodItemNotBetween(String value1, String value2) {
            addCriterion("FOOD_ITEM not between", value1, value2, "foodItem");
            return (Criteria) this;
        }

        public Criteria andOrderTimeIsNull() {
            addCriterion("ORDER_TIME is null");
            return (Criteria) this;
        }

        public Criteria andOrderTimeIsNotNull() {
            addCriterion("ORDER_TIME is not null");
            return (Criteria) this;
        }

        public Criteria andOrderTimeEqualTo(Timestamp value) {
            addCriterion("ORDER_TIME =", value, "orderTime");
            return (Criteria) this;
        }

        public Criteria andOrderTimeNotEqualTo(Timestamp value) {
            addCriterion("ORDER_TIME <>", value, "orderTime");
            return (Criteria) this;
        }

        public Criteria andOrderTimeGreaterThan(Timestamp value) {
            addCriterion("ORDER_TIME >", value, "orderTime");
            return (Criteria) this;
        }

        public Criteria andOrderTimeGreaterThanOrEqualTo(Timestamp value) {
            addCriterion("ORDER_TIME >=", value, "orderTime");
            return (Criteria) this;
        }

        public Criteria andOrderTimeLessThan(Timestamp value) {
            addCriterion("ORDER_TIME <", value, "orderTime");
            return (Criteria) this;
        }

        public Criteria andOrderTimeLessThanOrEqualTo(Timestamp value) {
            addCriterion("ORDER_TIME <=", value, "orderTime");
            return (Criteria) this;
        }

        public Criteria andOrderTimeIn(List<Timestamp> values) {
            addCriterion("ORDER_TIME in", values, "orderTime");
            return (Criteria) this;
        }

        public Criteria andOrderTimeNotIn(List<Timestamp> values) {
            addCriterion("ORDER_TIME not in", values, "orderTime");
            return (Criteria) this;
        }

        public Criteria andOrderTimeBetween(Timestamp value1, Timestamp value2) {
            addCriterion("ORDER_TIME between", value1, value2, "orderTime");
            return (Criteria) this;
        }

        public Criteria andOrderTimeNotBetween(Timestamp value1, Timestamp value2) {
            addCriterion("ORDER_TIME not between", value1, value2, "orderTime");
            return (Criteria) this;
        }

        public Criteria andOrderLogIdIsNull() {
            addCriterion("ORDER_LOG_ID is null");
            return (Criteria) this;
        }

        public Criteria andOrderLogIdIsNotNull() {
            addCriterion("ORDER_LOG_ID is not null");
            return (Criteria) this;
        }

        public Criteria andOrderLogIdEqualTo(Integer value) {
            addCriterion("ORDER_LOG_ID =", value, "orderLogId");
            return (Criteria) this;
        }

        public Criteria andOrderLogIdNotEqualTo(Integer value) {
            addCriterion("ORDER_LOG_ID <>", value, "orderLogId");
            return (Criteria) this;
        }

        public Criteria andOrderLogIdGreaterThan(Integer value) {
            addCriterion("ORDER_LOG_ID >", value, "orderLogId");
            return (Criteria) this;
        }

        public Criteria andOrderLogIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("ORDER_LOG_ID >=", value, "orderLogId");
            return (Criteria) this;
        }

        public Criteria andOrderLogIdLessThan(Integer value) {
            addCriterion("ORDER_LOG_ID <", value, "orderLogId");
            return (Criteria) this;
        }

        public Criteria andOrderLogIdLessThanOrEqualTo(Integer value) {
            addCriterion("ORDER_LOG_ID <=", value, "orderLogId");
            return (Criteria) this;
        }

        public Criteria andOrderLogIdIn(List<Integer> values) {
            addCriterion("ORDER_LOG_ID in", values, "orderLogId");
            return (Criteria) this;
        }

        public Criteria andOrderLogIdNotIn(List<Integer> values) {
            addCriterion("ORDER_LOG_ID not in", values, "orderLogId");
            return (Criteria) this;
        }

        public Criteria andOrderLogIdBetween(Integer value1, Integer value2) {
            addCriterion("ORDER_LOG_ID between", value1, value2, "orderLogId");
            return (Criteria) this;
        }

        public Criteria andOrderLogIdNotBetween(Integer value1, Integer value2) {
            addCriterion("ORDER_LOG_ID not between", value1, value2, "orderLogId");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table order_entry
     *
     * @mbg.generated do_not_delete_during_merge Mon Mar 12 12:31:13 EDT 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table order_entry
     *
     * @mbg.generated Mon Mar 12 12:31:13 EDT 2018
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}